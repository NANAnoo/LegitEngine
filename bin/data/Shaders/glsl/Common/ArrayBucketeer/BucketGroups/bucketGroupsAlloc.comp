#version 450
#extension GL_GOOGLE_include_directive : enable
#extension GL_ARB_separate_shader_objects : enable
#define WORKGROUP_SIZE 4
layout (local_size_x = WORKGROUP_SIZE, local_size_y = 1, local_size_z = 1 ) in;

#include "../passData.decl"
#include "../../projection.decl"
#include "../bucketsData.decl"
#include "../../pointsData.decl"
#include "../bucketGroupsData.decl"

void main() 
{
  /*uint bucketGroupIndex = uint(gl_GlobalInvocationID.x);
  if(bucketGroupIndex < bucketGroupsCount)
  {
    bucketGroupsBuf.data[bucketGroupIndex].bucketIndexOffset = atomicAdd(bucketGroupsBuf.data[0].bucketIndexGlobalOffset, bucketGroupsBuf.data[bucketGroupIndex].bucketsCount);
    bucketGroupsBuf.data[bucketGroupIndex].bucketsCount = 0;
  }*/
  if(uint(gl_GlobalInvocationID.x) == 0)
  {
    uint globalOffset = 0;
    for(uint groupIndex = 0; groupIndex < passDataBuf.bucketGroupsCount; groupIndex++)
    {
      bucketGroupsBuf.data[groupIndex].entryOffset = globalOffset;
      globalOffset += bucketGroupsBuf.data[groupIndex].bucketsCount;
      bucketGroupsBuf.data[groupIndex].bucketsCount = 0;
    }
  }
}