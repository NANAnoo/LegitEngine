#version 450
#extension GL_GOOGLE_include_directive : enable
#extension GL_ARB_separate_shader_objects : enable

#define WORKGROUP_SIZE 8
layout (local_size_x = WORKGROUP_SIZE, local_size_y = WORKGROUP_SIZE, local_size_z = WORKGROUP_SIZE ) in;

#include "../SimulationData.decl" //binding 0 

layout(binding = 1, set = 0) uniform sampler3D srcVelocitySampler;
layout(binding = 2, set = 0) uniform sampler3D srcPressureSampler;

uniform layout(binding = 3, rgba32f) image3D dstVelocityImage;
uniform layout(binding = 4, r32f) image3D dstPressureImage;

void main() 
{
  ivec3 nodeIndex = ivec3(gl_GlobalInvocationID.xyz);
  vec3 normPos = (vec3(nodeIndex) + vec3(0.5f)) / vec3(simulationDataBuf.volumeResolution.xyz);
  vec3 volumePos = GetWorldVolumePoint(normPos);
  
  vec3 nodeVelocity = textureLod(srcVelocitySampler, normPos, 0.0f).xyz;
  
  vec3 advectedVolumePos = volumePos - nodeVelocity * simulationDataBuf.timeStep;
  vec3 advectedNormPos = GetUvVolumePoint(advectedVolumePos);
  
  imageStore(dstVelocityImage, nodeIndex, textureLod(srcVelocitySampler, advectedNormPos, 0.0f));
  imageStore(dstPressureImage, nodeIndex, textureLod(srcPressureSampler, advectedNormPos, 0.0f));
}

