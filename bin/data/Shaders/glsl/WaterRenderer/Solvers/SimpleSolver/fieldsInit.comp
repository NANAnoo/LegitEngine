#version 450
#extension GL_GOOGLE_include_directive : enable
#extension GL_ARB_separate_shader_objects : enable

#define WORKGROUP_SIZE 8
layout (local_size_x = WORKGROUP_SIZE, local_size_y = WORKGROUP_SIZE, local_size_z = WORKGROUP_SIZE ) in;

#include "../SimulationData.decl" //binding 0 

uniform layout(binding = 1, rgba32f) image3D velocityImage;
uniform layout(binding = 2, r32f) image3D pressureImage;

void main() 
{
  ivec3 nodeIndex = ivec3(gl_GlobalInvocationID.xyz);
  vec3 normPos = vec3(nodeIndex) / vec3(simulationDataBuf.volumeResolution.xyz);
  vec3 centerDiff = normPos - vec3(0.5f);
  
  vec3 velocity = vec3(centerDiff.y, -centerDiff.x, 0.0f);
  
  vec3 leftDiff = (normPos - vec3(0.3f, 0.15f, 0.5f));
  vec3 rightDiff = (normPos - vec3(0.7f, 0.15f, 0.5f));
  
  vec3 volumeSize = simulationDataBuf.volumeMax.xyz - simulationDataBuf.volumeMin.xyz;
  velocity = vec3(0.0f);
  if(length(leftDiff) < 0.1f)
    velocity = vec3(0.2f * volumeSize.x, 0.2f * volumeSize.y, 0.0f);
  if(length(rightDiff) < 0.1f)
    velocity = vec3(-0.2f * volumeSize.x, 0.2f * volumeSize.y, 0.0f);
    
  /*if(normPos.x > 0.2f && normPos.x < 0.8f)
  {
    if(normPos.z > 0.5f)
    {
      velocity = vec3( 0.05f * volumeSize.x, 0.0f, 0.0f);
    }else
    {
      velocity = vec3(-0.05f * volumeSize.x, 0.0f, 0.0f);
    }
  }*/
  imageStore(velocityImage, nodeIndex, vec4(velocity, 0.0f));
  
  
  /*if(normPos.x > 0.2f && normPos.x < 0.8f)
  {
    if(normPos.z > 0.5f)
    {
      velocity = vec3(0.05f * volumeSize.x, 0.0f, 0.0f);
    }else
    //if(length(rightDiff) < 0.1f)
    {
      velocity = vec3(-0.05f * volumeSize.x, 0.0f, 0.0f);
    }
  }
  imageStore(velocityImage, nodeIndex, vec4(velocity, 0.0f));*/

  imageStore(pressureImage, nodeIndex, vec4(0.0f));
  //imageStore(pressureImage, nodeIndex, vec4(0.0f, 0.0f, 0.0f, 0.0f));
}

