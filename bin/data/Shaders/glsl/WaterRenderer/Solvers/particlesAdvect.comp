#version 450
#extension GL_GOOGLE_include_directive : enable
#extension GL_ARB_separate_shader_objects : enable

#define WORKGROUP_SIZE 8
layout (local_size_x = WORKGROUP_SIZE, local_size_y = 1, local_size_z = 1 ) in;

#include "SimulationData.decl" //binding 0 
#include "../../Common/pointsData.decl" //binding 1

layout(binding = 2, set = 0) uniform sampler3D velocitySampler;

void main() 
{
  uint particleIndex = uint(gl_GlobalInvocationID.x);
  
  if(particleIndex < simulationDataBuf.particlesCount)
  {
    vec3 uv = GetUvVolumePoint(pointsBuf.data[particleIndex].worldPos.xyz);
  
    vec3 volumeSize = simulationDataBuf.volumeMax.xyz - simulationDataBuf.volumeMin.xyz;
    vec3 velocity = textureLod(velocitySampler, uv, 0).xyz;
    pointsBuf.data[particleIndex].worldPos.xyz += velocity * simulationDataBuf.timeStep;
    pointsBuf.data[particleIndex].directLight = vec4(0.0f);
  }
}

